// inject-env.cjs
const fs = require('fs');
const path = require('path');

function safeJsonParse(s, def = null) {
  if (!s) return def;
  try { return JSON.parse(s); } catch { return def; }
}
function truthy(v, def = false) {
  if (v === undefined || v === null || v === '') return def;
  const s = String(v).trim().toLowerCase();
  return !(['false','0','no','off'].includes(s));
}
function buildVersion() {
  const sha = process.env.VERCEL_GIT_COMMIT_SHA || process.env.GIT_COMMIT_SHA || '';
  if (sha && /^[0-9a-f]{7,}$/.test(sha)) return sha;
  return String(Date.now());
}
function compact(obj) {
  const out = {};
  Object.entries(obj || {}).forEach(([k, v]) => {
    if (v !== undefined && v !== null && v !== '') out[k] = v;
  });
  return Object.keys(out).length ? out : null;
}

try {
  // --- 1) Firebase config: preferisci JSON, altrimenti ricomponi dai pezzi NEXT_PUBLIC_* ---
  const fbFromJson =
    safeJsonParse(process.env.FIREBASE_WEB_CONFIG, null) ||
    safeJsonParse(process.env.FIREBASE_CONFIG, null);

  const fbFromPieces = compact({
    apiKey:            process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
    projectId:         process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
    authDomain:        process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
    storageBucket:     process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
    appId:             process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
    measurementId:     process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,
  });

  const firebaseConfig = fbFromJson || fbFromPieces || null;

  // --- 2) Flag abilitazione Firebase ---
  const FIREBASE_ENABLED = firebaseConfig ? true : truthy(process.env.FIREBASE_ENABLED, false);

  if (!firebaseConfig) {
    console.warn('‚ö†Ô∏è  inject-env: Firebase config non trovata. L\'app partir√†, ma Firebase rester√† OFF.');
  }

  // --- 3) Altre ENV app ---
  const REMINDER_DAYS_AHEAD = parseInt(process.env.REMINDER_DAYS_AHEAD || '7', 10);
  const WHATSAPP_API_BASE = process.env.WHATSAPP_API_BASE || 'https://remindertribu-two.vercel.app/api';
  const GOOGLE_CALENDAR_EMBED_URL = process.env.GOOGLE_CALENDAR_EMBED_URL || '';

  // --- 4) Debug flags ---
  const DEBUG_ENABLED = truthy(process.env.APP_DEBUG, false);
  const DEBUG_BANNER  = truthy(process.env.APP_DEBUG_BANNER, DEBUG_ENABLED);

  // --- 5) Oggetto di output ---
  const version = buildVersion();
  const out = {
    FIREBASE: {
      enabled: FIREBASE_ENABLED,
      config: firebaseConfig
    },
    // alias minuscolo per compat con vecchio codice
    firebase: {
      enabled: FIREBASE_ENABLED,
      config: firebaseConfig
    },
    REMINDER_DAYS_AHEAD,
    WHATSAPP_API_BASE,
    GOOGLE_CALENDAR_EMBED_URL,
    VERSION: version,
    BUILD_AT: new Date().toISOString(),
    __DEBUG: {
      enabled: DEBUG_ENABLED,
      banner: DEBUG_BANNER,
      env: {
        has_FIREBASE_WEB_CONFIG: !!process.env.FIREBASE_WEB_CONFIG,
        has_NEXT_PUBLIC_PIECES:  !!fbFromPieces,
        FIREBASE_ENABLED_flag:   FIREBASE_ENABLED
      },
      firebase: {
        enabled: FIREBASE_ENABLED,
        hasConfig: !!firebaseConfig,
        projectId: firebaseConfig?.projectId || null,
        hasApiKey: !!firebaseConfig?.apiKey
      },
      build: {
        version
      }
    }
  };

  // --- 6) Genera config.js + bootstrap di debug opzionale ---
  const dist = path.join(process.cwd(), 'config.js');
  const body =
`/* AUTO-GENERATED BY inject-env.cjs */
window.AppConfig = Object.freeze(${JSON.stringify(out, null, 2)});

/* DEBUG RUNTIME (abilitabile con APP_DEBUG=1) */
(function(){
  try {
    var dbg = (window.AppConfig && window.AppConfig.__DEBUG) || {};
    if (!dbg || !dbg.enabled) return;

    // Espone un oggetto rapido per controlli via console
    window.__ENV_DEBUG = {
      enabled: !!dbg.enabled,
      banner: !!dbg.banner,
      projectId: window.AppConfig?.FIREBASE?.config?.projectId || null,
      hasFirebaseConfig: !!window.AppConfig?.FIREBASE?.config,
      hasFirebaseAlias:  !!window.AppConfig?.firebase?.config,
      whatsappApiBase: window.AppConfig?.WHATSAPP_API_BASE || null,
      calendarEmbed: !!window.AppConfig?.GOOGLE_CALENDAR_EMBED_URL,
      version: window.AppConfig?.VERSION
    };

    // Log sintetico e sicuro (no secreti)
    console.groupCollapsed('%cüîé AppConfig DEBUG','color:#0bf');
    console.log('Firebase enabled:', window.AppConfig?.FIREBASE?.enabled);
    console.log('Firebase projectId:', window.AppConfig?.FIREBASE?.config?.projectId || null);
    console.log('Firebase alias present (lowercase):', !!window.AppConfig?.firebase?.config);
    console.log('WHATSAPP_API_BASE:', window.AppConfig?.WHATSAPP_API_BASE);
    console.log('GOOGLE_CALENDAR_EMBED_URL set?:', !!window.AppConfig?.GOOGLE_CALENDAR_EMBED_URL);
    console.log('VERSION:', window.AppConfig?.VERSION, 'BUILD_AT:', window.AppConfig?.BUILD_AT);
    console.groupEnd();

    // Banner visivo opzionale
    if (dbg.banner) {
      var b = document.createElement('div');
      b.textContent = 'DEBUG BUILD';
      b.style.cssText = [
        'position:fixed','top:8px','right:8px','z-index:99999',
        'background:#2b3a55','color:#d6e4ff','padding:6px 10px',
        'border:1px solid #415173','border-radius:8px','font:12px/1.2 monospace',
        'box-shadow:0 4px 12px rgba(0,0,0,.2)','opacity:.9'
      ].join(';');
      document.addEventListener('DOMContentLoaded', function(){
        document.body.appendChild(b);
      });
    }
  } catch(e) {
    console.warn('inject-env DEBUG bootstrap error:', e);
  }
})();`;

  fs.writeFileSync(dist, body, 'utf8');
  console.log('‚úÖ Generato ./config.js (con blocco DEBUG opzionale)');
} catch (e) {
  console.error('‚ùå inject-env error:', e);
  process.exit(1);
}
