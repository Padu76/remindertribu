// inject-env.cjs
/* Genera /config.js con le variabili pubbliche necessarie al front-end.
 * NON inserire qui credenziali segrete (service account JSON, token, ecc.)
 */
const fs = require('fs');

function pickEnv(name, def = '') {
  const v = process.env[name];
  return (typeof v === 'string' && v.length) ? v : def;
}

function buildFirebaseConfig() {
  const apiKey = pickEnv('NEXT_PUBLIC_FIREBASE_API_KEY');
  const projectId = pickEnv('NEXT_PUBLIC_FIREBASE_PROJECT_ID');
  const authDomain = pickEnv('NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN');
  const storageBucket = pickEnv('NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET');
  const messagingSenderId = pickEnv('NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID');
  const appId = pickEnv('NEXT_PUBLIC_FIREBASE_APP_ID');
  const measurementId = pickEnv('NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID');

  const enabled = !!(apiKey && projectId);
  return {
    enabled,
    config: { apiKey, projectId, authDomain, storageBucket, messagingSenderId, appId, measurementId }
  };
}

function buildCalendarEmbedUrl() {
  const calId = pickEnv('GOOGLE_CALENDAR_ID');            // NON segreto
  const tz = pickEnv('CALENDAR_TZ', 'Europe/Rome');
  if (!calId) return '';
  const url = `https://calendar.google.com/calendar/embed?src=${encodeURIComponent(calId)}&ctz=${encodeURIComponent(tz)}`;
  return url;
}

function generateConfig() {
  const FIREBASE = buildFirebaseConfig();
  const WHATSAPP_API_BASE = pickEnv('WHATSAPP_API_BASE', '/api');
  const REMINDER_DAYS_AHEAD = Number(pickEnv('REMINDER_DAYS_AHEAD', '7')) || 7;
  const GOOGLE_CALENDAR_EMBED_URL = buildCalendarEmbedUrl();

  const VERSION = pickEnv('VERCEL_GIT_COMMIT_SHA', Math.random().toString(36).slice(2));
  const BUILD_AT = new Date().toISOString();

  return `/* AUTO-GENERATED BY inject-env.cjs */
window.AppConfig = Object.freeze({
  FIREBASE: ${JSON.stringify(FIREBASE, null, 2)},
  REMINDER_DAYS_AHEAD: ${REMINDER_DAYS_AHEAD},
  WHATSAPP_API_BASE: ${JSON.stringify(WHATSAPP_API_BASE)},
  GOOGLE_CALENDAR_EMBED_URL: ${JSON.stringify(GOOGLE_CALENDAR_EMBED_URL)},
  VERSION: ${JSON.stringify(VERSION)},
  BUILD_AT: ${JSON.stringify(BUILD_AT)}
});
`;
}

try {
  const content = generateConfig();
  fs.writeFileSync('config.js', content, 'utf8');
  console.log('✅ Generato ./config.js');
  if (JSON.parse(content.match(/\{[\s\S]*\}$/)[0]).GOOGLE_CALENDAR_EMBED_URL) {
    console.log('✅ GOOGLE_CALENDAR_EMBED_URL impostato');
  } else {
    console.log('ℹ️ Nessun GOOGLE_CALENDAR_ID definito: la vista iframe sarà disabilitata');
  }
} catch (e) {
  console.error('❌ inject-env error:', e);
  process.exit(1);
}
